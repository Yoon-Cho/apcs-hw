import java.util.*;

public class QuickSort{

    public Integer[] quickSort(Integer[] L){
	if (L.length <= 1)
	    return L;
	else{
	    Random rnd = new Random();
	    int pivot = new Integer(rnd.nextInt(L.length));
	    ArrayList<Integer> lower = new ArrayList<Integer>();
	    ArrayList<Integer> upper = new ArrayList<Integer>();
	    for (int a = 0; a < pivot; a++)
		lower.add(L[a]);
	    for (int b = pivot; b < L.length; b++)
		upper.add(L[b]);
	    Integer[] la = lower.toArray(new Integer[]{});
	    la = quickSort(la);
	    Integer[] ua = upper.toArray(new Integer[]{});
	    ua = quickSort(ua);
	    Integer[] answer = new Integer[upper.size()+lower.size()];
	    for (int x = 0; x < lower.size();x++){
		answer[x] = lower.get(x);
	    }
	    answer[lower.size()] = pivot;
	    for (int y = lower.size()+1; y < upper.size()+lower.size(); y++){
		answer[y] = upper.get(y-lower.size()-1);
	    }
	    return answer;
	}
    }

    public static void main(String[] args){
	QuickSort tester = new QuickSort();
	Random rnd = new Random();
	Integer[] a = new Integer[15];
	for (int i = 0; i < 15; i++){
	    a[i] = new Integer(rnd.nextInt(100));
	}

	System.out.println(Arrays.toString(a));
	System.out.println(Arrays.toString(tester.quickSort(a)));
    }

}
